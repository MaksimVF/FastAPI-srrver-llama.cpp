#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ create_app()
"""

import os
import tempfile
import sys

def test_original_error_fixed():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç, —á—Ç–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞"""
    
    print("üîß –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –û–®–ò–ë–ö–ò create_app()")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –º–æ–¥–µ–ª–∏
    with tempfile.NamedTemporaryFile(suffix='.gguf', delete=False) as temp_file:
        temp_model_path = temp_file.name
        temp_file.write(b"fake model data" * 1000)
    
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        original_env = {
            'MODEL_PATH': os.environ.get('MODEL_PATH'),
            'N_CTX': os.environ.get('N_CTX'),
            'N_THREADS': os.environ.get('N_THREADS')
        }
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        os.environ['MODEL_PATH'] = temp_model_path
        os.environ['N_CTX'] = '2048'
        os.environ['N_THREADS'] = '8'
        
        print("1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
        
        try:
            from llama_cpp.server.settings import ModelSettings, ServerSettings
            from llama_cpp.server.app import create_app
            print("   ‚úÖ –ò–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω")
            
            # –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            model_settings = ModelSettings(
                model=temp_model_path,
                n_ctx=2048,
                n_threads=8,
                n_batch=512,
                verbose=False
            )
            print("   ‚úÖ ModelSettings —Å–æ–∑–¥–∞–Ω—ã")
            
            server_settings = ServerSettings(
                host="0.0.0.0",
                port=12000
            )
            print("   ‚úÖ ServerSettings —Å–æ–∑–¥–∞–Ω—ã")
            
            # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ create_app() —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏...")
            
            try:
                app = create_app(
                    server_settings=server_settings,
                    model_settings=[model_settings]
                )
                print("   ‚úÖ create_app() –≤—ã–∑–≤–∞–Ω –±–µ–∑ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏!")
                print("   ‚úÖ –û–°–ù–û–í–ù–ê–Ø –û–®–ò–ë–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ê!")
                
                if app is not None:
                    print(f"   ‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: {type(app)}")
                    return True
                    
            except Exception as e:
                error_msg = str(e)
                if "validation error" in error_msg.lower() and "serverSettings" in error_msg:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤—Å–µ –µ—â–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç: {e}")
                    return False
                elif "Failed to load model" in error_msg:
                    print(f"   ‚úÖ –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
                    print(f"   ‚ö†Ô∏è  –û–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏: {e}")
                    print("   (–≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ - –Ω—É–∂–Ω–∞ –Ω–∞—Å—Ç–æ—è—â–∞—è –º–æ–¥–µ–ª—å)")
                    return True
                else:
                    print(f"   ‚ö†Ô∏è  –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞: {e}")
                    return False
                    
        except ImportError as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
            return False
            
    finally:
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        for key, value in original_env.items():
            if value is not None:
                os.environ[key] = value
            elif key in os.environ:
                del os.environ[key]
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        if os.path.exists(temp_model_path):
            os.unlink(temp_model_path)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    
    success = test_original_error_fixed()
    
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê:")
    print("=" * 60)
    
    if success:
        print("üéâ –£–°–ü–ï–•! –û—à–∏–±–∫–∞ —Å create_app() –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        print()
        print("‚úÖ –ß—Ç–æ –±—ã–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:")
        print("   - create_app() —Ç–µ–ø–µ—Ä—å –ø—Ä–∏–Ω–∏–º–∞–µ—Ç ModelSettings –∏ ServerSettings")
        print("   - –£–±—Ä–∞–Ω–∞ –ø–µ—Ä–µ–¥–∞—á–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ Llama –Ω–∞–ø—Ä—è–º—É—é")
        print("   - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã ServerSettings")
        print("   - –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫")
        print()
        print("üìù –î–ª—è –ø–æ–ª–Ω–æ–π —Ä–∞–±–æ—Ç—ã:")
        print("   1. –°–∫–∞—á–∞–π—Ç–µ –º–æ–¥–µ–ª—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ GGUF")
        print("   2. –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –≤ .env —Ñ–∞–π–ª–µ")
        print("   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python Main.py")
        
    else:
        print("‚ùå –û–®–ò–ë–ö–ê! –ü—Ä–æ–±–ª–µ–º–∞ —Å create_app() –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")
        print("   –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞")
    
    return success

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)