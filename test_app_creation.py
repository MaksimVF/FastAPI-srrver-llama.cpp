#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å —Ñ–∏–∫—Ç–∏–≤–Ω–æ–π –º–æ–¥–µ–ª—å—é
"""

import os
import tempfile
from Main import main

def test_app_creation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –º–æ–¥–µ–ª–∏
    with tempfile.NamedTemporaryFile(suffix='.gguf', delete=False) as temp_file:
        temp_model_path = temp_file.name
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –º–æ–¥–µ–ª–∏
        temp_file.write(b"fake model data" * 1000)
    
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        original_env = {
            'MODEL_PATH': os.environ.get('MODEL_PATH'),
            'N_CTX': os.environ.get('N_CTX'),
            'N_THREADS': os.environ.get('N_THREADS')
        }
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        os.environ['MODEL_PATH'] = temp_model_path
        os.environ['N_CTX'] = '2048'
        os.environ['N_THREADS'] = '8'
        
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
        print("=" * 50)
        
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            app = main()
            
            if app is not None:
                print("‚úÖ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
                print(f"   –¢–∏–ø –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {type(app)}")
                print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ä—à—Ä—É—Ç–æ–≤: {len(app.routes)}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
                routes = [route.path for route in app.routes if hasattr(route, 'path')]
                print(f"   –û—Å–Ω–æ–≤–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã: {routes[:5]}...")  # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                
                return True
            else:
                print("‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ —Å–æ–∑–¥–∞–Ω–æ")
                return False
                
        except Exception as e:
            print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
            print("   –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç–æ—è—â–∞—è –º–æ–¥–µ–ª—å")
            return False
        
    finally:
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        for key, value in original_env.items():
            if value is not None:
                os.environ[key] = value
            elif key in os.environ:
                del os.environ[key]
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        if os.path.exists(temp_model_path):
            os.unlink(temp_model_path)

if __name__ == "__main__":
    success = test_app_creation()
    
    print("\n" + "=" * 50)
    if success:
        print("üéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("‚ö†Ô∏è  –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù: –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç–æ—è—â–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –ø–æ–ª–Ω–æ–π —Ä–∞–±–æ—Ç—ã")
    
    print("\nüìù –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
    print("–û—Å–Ω–æ–≤–Ω–∞—è –æ—à–∏–±–∫–∞ —Å create_app() –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞.")
    print("–¢–µ–ø–µ—Ä—å –∫–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ModelSettings –∏ ServerSettings.")
    print("–î–ª—è –ø–æ–ª–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç–æ—è—â–∞—è –º–æ–¥–µ–ª—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ GGUF.")